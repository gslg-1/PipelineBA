ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_hal_sdram.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_SDRAM_DMA_XferCpltCallback,"ax",%progbits
  22              		.align	2
  23              		.weak	HAL_SDRAM_DMA_XferCpltCallback
  24              		.thumb
  25              		.thumb_func
  27              	HAL_SDRAM_DMA_XferCpltCallback:
  28              	.LFB136:
  29              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @file    stm32f4xx_hal_sdram.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief   SDRAM HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          This file provides a generic firmware to drive SDRAM memories mounted 
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          as external device.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *         
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   @verbatim
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ==============================================================================
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****                        ##### How to use this driver #####
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ============================================================================== 
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   [..]
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     This driver is a generic layered driver which contains a set of APIs used to 
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     control SDRAM memories. It uses the FMC layer functions to interface 
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     with SDRAM devices.  
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     The following sequence should be followed to configure the FMC to interface
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     with SDRAM memories: 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    (#) Declare a SDRAM_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****           SDRAM_HandleTypeDef  hdsram 
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****           
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        (++) Fill the SDRAM_HandleTypeDef handle "Init" field with the allowed 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             values of the structure member.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        (++) Fill the SDRAM_HandleTypeDef handle "Instance" field with a predefined 
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             base register instance for NOR or SDRAM device 
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****              
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    (#) Declare a FMC_SDRAM_TimingTypeDef structure; for example:
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 2


  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****           FMC_SDRAM_TimingTypeDef  Timing;
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       and fill its fields with the allowed values of the structure member.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    (#) Initialize the SDRAM Controller by calling the function HAL_SDRAM_Init(). This function
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        performs the following sequence:
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****           
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        (##) MSP hardware layer configuration using the function HAL_SDRAM_MspInit()
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        (##) Control register configuration using the FMC SDRAM interface function 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             FMC_SDRAM_Init()
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        (##) Timing register configuration using the FMC SDRAM interface function 
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             FMC_SDRAM_Timing_Init()
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        (##) Program the SDRAM external device by applying its initialization sequence
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             according to the device plugged in your hardware. This step is mandatory
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             for accessing the SDRAM device.   
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    (#) At this stage you can perform read/write accesses from/to the memory connected 
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        to the SDRAM Bank. You can perform either polling or DMA transfer using the
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        following APIs:
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        (++) HAL_SDRAM_Read()/HAL_SDRAM_Write() for polling read/write access
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        (++) HAL_SDRAM_Read_DMA()/HAL_SDRAM_Write_DMA() for DMA read/write transfer
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    (#) You can also control the SDRAM device by calling the control APIs HAL_SDRAM_WriteOperation_E
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        HAL_SDRAM_WriteOperation_Disable() to respectively enable/disable the SDRAM write operation 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        the function HAL_SDRAM_SendCommand() to send a specified command to the SDRAM
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        device. The command to be sent must be configured with the FMC_SDRAM_CommandTypeDef 
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        structure.   
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    (#) You can continuously monitor the SDRAM device HAL state by calling the function
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****        HAL_SDRAM_GetState()
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    *** Callback registration ***
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     =============================================
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     [..]
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       The compilation define  USE_HAL_SDRAM_REGISTER_CALLBACKS when set to 1
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       Use Functions @ref HAL_SDRAM_RegisterCallback() to register a user callback,
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       it allows to register following callbacks:
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****         (+) MspInitCallback    : SDRAM MspInit.
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****         (+) MspDeInitCallback  : SDRAM MspDeInit.
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       This function takes as parameters the HAL peripheral handle, the Callback ID
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       and a pointer to the user callback function.
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       Use function @ref HAL_SDRAM_UnRegisterCallback() to reset a callback to the default
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       weak (surcharged) function. It allows to reset following callbacks:
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****         (+) MspInitCallback    : SDRAM MspInit.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****         (+) MspDeInitCallback  : SDRAM MspDeInit.
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       This function) takes as parameters the HAL peripheral handle and the Callback ID.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       By default, after the @ref HAL_SDRAM_Init and if the state is HAL_SDRAM_STATE_RESET
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       all callbacks are reset to the corresponding legacy weak (surcharged) functions.
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       Exception done for MspInit and MspDeInit callbacks that are respectively
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       reset to the legacy weak (surcharged) functions in the @ref HAL_SDRAM_Init
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       and @ref  HAL_SDRAM_DeInit only when these callbacks are null (not registered beforehand).
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       If not, MspInit or MspDeInit are not null, the @ref HAL_SDRAM_Init and @ref HAL_SDRAM_DeInit
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 3


  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       Callbacks can be registered/unregistered in READY state only.
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       during the Init/DeInit.
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       In that case first register the MspInit/MspDeInit user callbacks
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       using @ref HAL_SDRAM_RegisterCallback before calling @ref HAL_SDRAM_DeInit
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       or @ref HAL_SDRAM_Init function.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       When The compilation define USE_HAL_SDRAM_REGISTER_CALLBACKS is set to 0 or
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       not defined, the callback registering feature is not available
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       and weak (surcharged) callbacks are used.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   @endverbatim
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ******************************************************************************
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @attention
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * All rights reserved.</center></h2>
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * the "License"; You may not use this file except in compliance with the
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * License. You may obtain a copy of the License at:
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                        opensource.org/licenses/BSD-3-Clause
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ******************************************************************************
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */ 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /* Includes ------------------------------------------------------------------*/
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #include "stm32f4xx_hal.h"
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /** @addtogroup STM32F4xx_HAL_Driver
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @{
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /** @defgroup SDRAM SDRAM
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief SDRAM driver modules
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @{
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #ifdef HAL_SDRAM_MODULE_ENABLED
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /* Private typedef -----------------------------------------------------------*/
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /* Private define ------------------------------------------------------------*/
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /* Private macro -------------------------------------------------------------*/    
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /* Private variables ---------------------------------------------------------*/
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /* Private functions ---------------------------------------------------------*/
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /* Exported functions --------------------------------------------------------*/
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions SDRAM Exported Functions
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @{
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group1 Initialization and de-initialization functions 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief    Initialization and Configuration functions 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   @verbatim    
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ==============================================================================
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 4


 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****            ##### SDRAM Initialization and de_initialization functions #####
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ==============================================================================
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   [..]  
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     This section provides functions allowing to initialize/de-initialize
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     the SDRAM memory
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** @endverbatim
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @{
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Performs the SDRAM device initialization sequence.
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  Timing Pointer to SDRAM control timing structure 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {   
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM handle parameter */
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram == NULL)
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_ERROR;
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_RESET)
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {  
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     /* Allocate lock resource and initialize it */
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     hsdram->Lock = HAL_UNLOCKED;
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     if(hsdram->MspInitCallback == NULL)
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     {
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     }
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     hsdram->RefreshErrorCallback = HAL_SDRAM_RefreshErrorCallback;
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     hsdram->DmaXferCpltCallback = HAL_SDRAM_DMA_XferCpltCallback;
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     hsdram->DmaXferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     /* Init the low level hardware */
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     hsdram->MspInitCallback(hsdram);
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #else
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     /* Initialize the low level hardware (MSP) */
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     HAL_SDRAM_MspInit(hsdram);
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #endif
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Initialize the SDRAM controller state */
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Initialize SDRAM control Interface */
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Initialize SDRAM timing Interface */
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM controller state */
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 5


 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Perform the SDRAM device initialization sequence.
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram->MspDeInitCallback == NULL)
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* DeInit the low level hardware */
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->MspDeInitCallback(hsdram);
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #else
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Initialize the low level hardware (MSP) */
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   HAL_SDRAM_MspDeInit(hsdram);
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #endif
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Configure the SDRAM registers with their reset values */
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Reset the SDRAM controller state */
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_RESET;
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Release Lock */
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  SDRAM MSP Init.
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval None
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** __weak void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef *hsdram)
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   UNUSED(hsdram);
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             the HAL_SDRAM_MspInit could be implemented in the user file
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    */ 
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  SDRAM MSP DeInit.
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval None
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 6


 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** __weak void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef *hsdram)
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   UNUSED(hsdram);
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             the HAL_SDRAM_MspDeInit could be implemented in the user file
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    */ 
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  This function handles SDRAM refresh error interrupt request.
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** */
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** void HAL_SDRAM_IRQHandler(SDRAM_HandleTypeDef *hsdram)
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check SDRAM interrupt Rising edge flag */
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(__FMC_SDRAM_GET_FLAG(hsdram->Instance, FMC_SDRAM_FLAG_REFRESH_IT))
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     /* SDRAM refresh error interrupt callback */
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     hsdram->RefreshErrorCallback(hsdram);
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #else
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     HAL_SDRAM_RefreshErrorCallback(hsdram);
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #endif
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     /* Clear SDRAM refresh error interrupt pending bit */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     __FMC_SDRAM_CLEAR_FLAG(hsdram->Instance, FMC_SDRAM_FLAG_REFRESH_ERROR);
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  SDRAM Refresh error callback.
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module. 
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval None
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** __weak void HAL_SDRAM_RefreshErrorCallback(SDRAM_HandleTypeDef *hsdram)
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   UNUSED(hsdram);
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             the HAL_SDRAM_RefreshErrorCallback could be implemented in the user file
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    */ 
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  DMA transfer complete callback.
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for the specified DMA module.
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval None
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** __weak void HAL_SDRAM_DMA_XferCpltCallback(DMA_HandleTypeDef *hdma)
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
  30              		.loc 1 313 0
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 7


  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE136:
  40 0002 00BF     		.section	.text.HAL_SDRAM_DMA_XferErrorCallback,"ax",%progbits
  41              		.align	2
  42              		.weak	HAL_SDRAM_DMA_XferErrorCallback
  43              		.thumb
  44              		.thumb_func
  46              	HAL_SDRAM_DMA_XferErrorCallback:
  47              	.LFB137:
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   UNUSED(hdma);
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             the HAL_SDRAM_DMA_XferCpltCallback could be implemented in the user file
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    */ 
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  DMA transfer complete error callback.
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hdma DMA handle
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval None
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** __weak void HAL_SDRAM_DMA_XferErrorCallback(DMA_HandleTypeDef *hdma)
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
  48              		.loc 1 327 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.LVL1:
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE137:
  58 0002 00BF     		.section	.text.HAL_SDRAM_MspInit,"ax",%progbits
  59              		.align	2
  60              		.weak	HAL_SDRAM_MspInit
  61              		.thumb
  62              		.thumb_func
  64              	HAL_SDRAM_MspInit:
  65              	.LFB132:
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
  66              		.loc 1 245 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.LVL2:
  72 0000 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE132:
  76 0002 00BF     		.section	.text.HAL_SDRAM_Init,"ax",%progbits
  77              		.align	2
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 8


  78              		.global	HAL_SDRAM_Init
  79              		.thumb
  80              		.thumb_func
  82              	HAL_SDRAM_Init:
  83              	.LFB130:
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM handle parameter */
  84              		.loc 1 162 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              	.LVL3:
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
  89              		.loc 1 164 0
  90 0000 E8B1     		cbz	r0, .L7
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM handle parameter */
  91              		.loc 1 162 0
  92 0002 38B5     		push	{r3, r4, r5, lr}
  93              	.LCFI0:
  94              		.cfi_def_cfa_offset 16
  95              		.cfi_offset 3, -16
  96              		.cfi_offset 4, -12
  97              		.cfi_offset 5, -8
  98              		.cfi_offset 14, -4
  99 0004 0446     		mov	r4, r0
 100 0006 0D46     		mov	r5, r1
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {  
 101              		.loc 1 169 0
 102 0008 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 103 000c 13F0FF0F 		tst	r3, #255
 104 0010 04D1     		bne	.L6
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 105              		.loc 1 172 0
 106 0012 0023     		movs	r3, #0
 107 0014 80F82D30 		strb	r3, [r0, #45]
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #endif
 108              		.loc 1 186 0
 109 0018 FFF7FEFF 		bl	HAL_SDRAM_MspInit
 110              	.LVL4:
 111              	.L6:
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 112              		.loc 1 191 0
 113 001c 0223     		movs	r3, #2
 114 001e 84F82C30 		strb	r3, [r4, #44]
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 115              		.loc 1 194 0
 116 0022 211D     		adds	r1, r4, #4
 117 0024 2068     		ldr	r0, [r4]
 118 0026 FFF7FEFF 		bl	FMC_SDRAM_Init
 119              	.LVL5:
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 120              		.loc 1 197 0
 121 002a 6268     		ldr	r2, [r4, #4]
 122 002c 2946     		mov	r1, r5
 123 002e 2068     		ldr	r0, [r4]
 124 0030 FFF7FEFF 		bl	FMC_SDRAM_Timing_Init
 125              	.LVL6:
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 9


 126              		.loc 1 200 0
 127 0034 0123     		movs	r3, #1
 128 0036 84F82C30 		strb	r3, [r4, #44]
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 129              		.loc 1 202 0
 130 003a 0020     		movs	r0, #0
 131 003c 38BD     		pop	{r3, r4, r5, pc}
 132              	.LVL7:
 133              	.L7:
 134              	.LCFI1:
 135              		.cfi_def_cfa_offset 0
 136              		.cfi_restore 3
 137              		.cfi_restore 4
 138              		.cfi_restore 5
 139              		.cfi_restore 14
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 140              		.loc 1 166 0
 141 003e 0120     		movs	r0, #1
 142              	.LVL8:
 143 0040 7047     		bx	lr
 144              		.cfi_endproc
 145              	.LFE130:
 147 0042 00BF     		.section	.text.HAL_SDRAM_MspDeInit,"ax",%progbits
 148              		.align	2
 149              		.weak	HAL_SDRAM_MspDeInit
 150              		.thumb
 151              		.thumb_func
 153              	HAL_SDRAM_MspDeInit:
 154              	.LFB133:
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 155              		.loc 1 260 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL9:
 161 0000 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE133:
 165 0002 00BF     		.section	.text.HAL_SDRAM_DeInit,"ax",%progbits
 166              		.align	2
 167              		.global	HAL_SDRAM_DeInit
 168              		.thumb
 169              		.thumb_func
 171              	HAL_SDRAM_DeInit:
 172              	.LFB131:
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 173              		.loc 1 212 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              	.LVL10:
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 178              		.loc 1 212 0
 179 0000 10B5     		push	{r4, lr}
 180              	.LCFI2:
 181              		.cfi_def_cfa_offset 8
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 10


 182              		.cfi_offset 4, -8
 183              		.cfi_offset 14, -4
 184 0002 0446     		mov	r4, r0
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #endif
 185              		.loc 1 223 0
 186 0004 FFF7FEFF 		bl	HAL_SDRAM_MspDeInit
 187              	.LVL11:
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 188              		.loc 1 227 0
 189 0008 6168     		ldr	r1, [r4, #4]
 190 000a 2068     		ldr	r0, [r4]
 191 000c FFF7FEFF 		bl	FMC_SDRAM_DeInit
 192              	.LVL12:
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 193              		.loc 1 230 0
 194 0010 0020     		movs	r0, #0
 195 0012 84F82C00 		strb	r0, [r4, #44]
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 196              		.loc 1 233 0
 197 0016 84F82D00 		strb	r0, [r4, #45]
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 198              		.loc 1 236 0
 199 001a 10BD     		pop	{r4, pc}
 200              		.cfi_endproc
 201              	.LFE131:
 203              		.section	.text.HAL_SDRAM_RefreshErrorCallback,"ax",%progbits
 204              		.align	2
 205              		.weak	HAL_SDRAM_RefreshErrorCallback
 206              		.thumb
 207              		.thumb_func
 209              	HAL_SDRAM_RefreshErrorCallback:
 210              	.LFB135:
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 211              		.loc 1 298 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216              	.LVL13:
 217 0000 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE135:
 221 0002 00BF     		.section	.text.HAL_SDRAM_IRQHandler,"ax",%progbits
 222              		.align	2
 223              		.global	HAL_SDRAM_IRQHandler
 224              		.thumb
 225              		.thumb_func
 227              	HAL_SDRAM_IRQHandler:
 228              	.LFB134:
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check SDRAM interrupt Rising edge flag */
 229              		.loc 1 275 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              	.LVL14:
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 234              		.loc 1 277 0
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 11


 235 0000 0368     		ldr	r3, [r0]
 236 0002 9B69     		ldr	r3, [r3, #24]
 237 0004 13F0010F 		tst	r3, #1
 238 0008 09D0     		beq	.L17
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check SDRAM interrupt Rising edge flag */
 239              		.loc 1 275 0
 240 000a 10B5     		push	{r4, lr}
 241              	.LCFI3:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
 245 000c 0446     		mov	r4, r0
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #endif
 246              		.loc 1 283 0
 247 000e FFF7FEFF 		bl	HAL_SDRAM_RefreshErrorCallback
 248              	.LVL15:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 249              		.loc 1 287 0
 250 0012 2268     		ldr	r2, [r4]
 251 0014 5369     		ldr	r3, [r2, #20]
 252 0016 43F00103 		orr	r3, r3, #1
 253 001a 5361     		str	r3, [r2, #20]
 254 001c 10BD     		pop	{r4, pc}
 255              	.LVL16:
 256              	.L17:
 257              	.LCFI4:
 258              		.cfi_def_cfa_offset 0
 259              		.cfi_restore 4
 260              		.cfi_restore 14
 261 001e 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE134:
 265              		.section	.text.HAL_SDRAM_Read_8b,"ax",%progbits
 266              		.align	2
 267              		.global	HAL_SDRAM_Read_8b
 268              		.thumb
 269              		.thumb_func
 271              	HAL_SDRAM_Read_8b:
 272              	.LFB138:
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   UNUSED(hdma);
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****             the HAL_SDRAM_DMA_XferErrorCallback could be implemented in the user file
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****    */ 
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @}
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group2 Input and Output functions 
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief    Input Output and memory control functions 
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   @verbatim    
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ==============================================================================
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****                     ##### SDRAM Input and Output functions #####
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ==============================================================================
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   [..]  
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 12


 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     This section provides functions allowing to use and control the SDRAM memory
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** @endverbatim
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @{
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Reads 8-bit data buffer from the SDRAM memory.
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer  
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_8b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint8_t *pDstB
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 273              		.loc 1 362 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278              	.LVL17:
 279 0000 10B4     		push	{r4}
 280              	.LCFI5:
 281              		.cfi_def_cfa_offset 4
 282              		.cfi_offset 4, -4
 283              	.LVL18:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __IO uint8_t *pSdramAddress = (uint8_t *)pAddress;
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Locked */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 284              		.loc 1 366 0
 285 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 286 0006 012C     		cmp	r4, #1
 287 0008 18D0     		beq	.L22
 288              		.loc 1 366 0 is_stmt 0 discriminator 2
 289 000a 0124     		movs	r4, #1
 290 000c 80F82D40 		strb	r4, [r0, #45]
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 291              		.loc 1 369 0 is_stmt 1 discriminator 2
 292 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 293 0014 E4B2     		uxtb	r4, r4
 294 0016 022C     		cmp	r4, #2
 295 0018 12D0     		beq	.L23
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_PRECHARGED)
 296              		.loc 1 373 0
 297 001a 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 298 001e E4B2     		uxtb	r4, r4
 299 0020 052C     		cmp	r4, #5
 300 0022 05D1     		bne	.L20
 301 0024 0EE0     		b	.L24
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 13


 302              	.LVL19:
 303              	.L21:
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return  HAL_ERROR; 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }  
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Read data from source */
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   for(; BufferSize != 0U; BufferSize--)
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     *pDstBuffer = *(__IO uint8_t *)pSdramAddress;  
 304              		.loc 1 381 0 discriminator 2
 305 0026 11F8014B 		ldrb	r4, [r1], #1	@ zero_extendqisi2
 306              	.LVL20:
 307 002a 02F8014B 		strb	r4, [r2], #1
 308              	.LVL21:
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 309              		.loc 1 379 0 discriminator 2
 310 002e 013B     		subs	r3, r3, #1
 311              	.LVL22:
 312              	.L20:
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 313              		.loc 1 379 0 is_stmt 0 discriminator 1
 314 0030 002B     		cmp	r3, #0
 315 0032 F8D1     		bne	.L21
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pDstBuffer++;
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pSdramAddress++;
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Unlocked */
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 316              		.loc 1 387 0 is_stmt 1
 317 0034 80F82D30 		strb	r3, [r0, #45]
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK; 
 318              		.loc 1 389 0
 319 0038 1846     		mov	r0, r3
 320              	.LVL23:
 321 003a 04E0     		b	.L19
 322              	.LVL24:
 323              	.L22:
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 324              		.loc 1 366 0
 325 003c 0220     		movs	r0, #2
 326              	.LVL25:
 327 003e 02E0     		b	.L19
 328              	.LVL26:
 329              	.L23:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 330              		.loc 1 371 0
 331 0040 0220     		movs	r0, #2
 332              	.LVL27:
 333 0042 00E0     		b	.L19
 334              	.LVL28:
 335              	.L24:
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }  
 336              		.loc 1 375 0
 337 0044 0120     		movs	r0, #1
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 14


 338              	.LVL29:
 339              	.L19:
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 340              		.loc 1 390 0
 341 0046 5DF8044B 		ldr	r4, [sp], #4
 342              	.LCFI6:
 343              		.cfi_restore 4
 344              		.cfi_def_cfa_offset 0
 345 004a 7047     		bx	lr
 346              		.cfi_endproc
 347              	.LFE138:
 349              		.section	.text.HAL_SDRAM_Write_8b,"ax",%progbits
 350              		.align	2
 351              		.global	HAL_SDRAM_Write_8b
 352              		.thumb
 353              		.thumb_func
 355              	HAL_SDRAM_Write_8b:
 356              	.LFB139:
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****  
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Writes 8-bit data buffer to SDRAM memory.
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write  
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_8b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint8_t *pSrc
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 357              		.loc 1 402 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362              	.LVL30:
 363 0000 10B4     		push	{r4}
 364              	.LCFI7:
 365              		.cfi_def_cfa_offset 4
 366              		.cfi_offset 4, -4
 367              	.LVL31:
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __IO uint8_t *pSdramAddress = (uint8_t *)pAddress;
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   uint32_t tmp = 0U;
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Locked */
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 368              		.loc 1 407 0
 369 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 370 0006 012C     		cmp	r4, #1
 371 0008 16D0     		beq	.L30
 372              		.loc 1 407 0 is_stmt 0 discriminator 2
 373 000a 0124     		movs	r4, #1
 374 000c 80F82D40 		strb	r4, [r0, #45]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   tmp = hsdram->State;
 375              		.loc 1 410 0 is_stmt 1 discriminator 2
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 15


 376 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 377 0014 E4B2     		uxtb	r4, r4
 378              	.LVL32:
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(tmp == HAL_SDRAM_STATE_BUSY)
 379              		.loc 1 412 0 discriminator 2
 380 0016 022C     		cmp	r4, #2
 381 0018 10D0     		beq	.L31
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else if((tmp == HAL_SDRAM_STATE_PRECHARGED) || (tmp == HAL_SDRAM_STATE_WRITE_PROTECTED))
 382              		.loc 1 416 0
 383 001a 043C     		subs	r4, r4, #4
 384              	.LVL33:
 385 001c 012C     		cmp	r4, #1
 386 001e 05D8     		bhi	.L28
 387 0020 0EE0     		b	.L32
 388              	.LVL34:
 389              	.L29:
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return  HAL_ERROR; 
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Write data to memory */
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   for(; BufferSize != 0U; BufferSize--)
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     *(__IO uint8_t *)pSdramAddress = *pSrcBuffer;
 390              		.loc 1 424 0 discriminator 2
 391 0022 12F8014B 		ldrb	r4, [r2], #1	@ zero_extendqisi2
 392              	.LVL35:
 393 0026 01F8014B 		strb	r4, [r1], #1
 394              	.LVL36:
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 395              		.loc 1 422 0 discriminator 2
 396 002a 013B     		subs	r3, r3, #1
 397              	.LVL37:
 398              	.L28:
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 399              		.loc 1 422 0 is_stmt 0 discriminator 1
 400 002c 002B     		cmp	r3, #0
 401 002e F8D1     		bne	.L29
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pSrcBuffer++;
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pSdramAddress++;
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Unlocked */
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);    
 402              		.loc 1 430 0 is_stmt 1
 403 0030 80F82D30 		strb	r3, [r0, #45]
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;   
 404              		.loc 1 432 0
 405 0034 1846     		mov	r0, r3
 406              	.LVL38:
 407 0036 04E0     		b	.L27
 408              	.LVL39:
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 16


 409              	.L30:
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 410              		.loc 1 407 0
 411 0038 0220     		movs	r0, #2
 412              	.LVL40:
 413 003a 02E0     		b	.L27
 414              	.LVL41:
 415              	.L31:
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 416              		.loc 1 414 0
 417 003c 0220     		movs	r0, #2
 418              	.LVL42:
 419 003e 00E0     		b	.L27
 420              	.LVL43:
 421              	.L32:
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 422              		.loc 1 418 0
 423 0040 0120     		movs	r0, #1
 424              	.LVL44:
 425              	.L27:
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 426              		.loc 1 433 0
 427 0042 5DF8044B 		ldr	r4, [sp], #4
 428              	.LCFI8:
 429              		.cfi_restore 4
 430              		.cfi_def_cfa_offset 0
 431 0046 7047     		bx	lr
 432              		.cfi_endproc
 433              	.LFE139:
 435              		.section	.text.HAL_SDRAM_Read_16b,"ax",%progbits
 436              		.align	2
 437              		.global	HAL_SDRAM_Read_16b
 438              		.thumb
 439              		.thumb_func
 441              	HAL_SDRAM_Read_16b:
 442              	.LFB140:
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Reads 16-bit data buffer from the SDRAM memory. 
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer  
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_16b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint16_t *pDs
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 443              		.loc 1 445 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448              	.LVL45:
 449 0000 10B4     		push	{r4}
 450              	.LCFI9:
 451              		.cfi_def_cfa_offset 4
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 17


 452              		.cfi_offset 4, -4
 453              	.LVL46:
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __IO uint16_t *pSdramAddress = (uint16_t *)pAddress;
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Locked */
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 454              		.loc 1 449 0
 455 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 456 0006 012C     		cmp	r4, #1
 457 0008 18D0     		beq	.L38
 458              		.loc 1 449 0 is_stmt 0 discriminator 2
 459 000a 0124     		movs	r4, #1
 460 000c 80F82D40 		strb	r4, [r0, #45]
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 461              		.loc 1 452 0 is_stmt 1 discriminator 2
 462 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 463 0014 E4B2     		uxtb	r4, r4
 464 0016 022C     		cmp	r4, #2
 465 0018 12D0     		beq	.L39
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_PRECHARGED)
 466              		.loc 1 456 0
 467 001a 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 468 001e E4B2     		uxtb	r4, r4
 469 0020 052C     		cmp	r4, #5
 470 0022 05D1     		bne	.L36
 471 0024 0EE0     		b	.L40
 472              	.LVL47:
 473              	.L37:
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return  HAL_ERROR; 
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }  
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Read data from source */
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   for(; BufferSize != 0U; BufferSize--)
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     *pDstBuffer = *(__IO uint16_t *)pSdramAddress;  
 474              		.loc 1 464 0 discriminator 2
 475 0026 31F8024B 		ldrh	r4, [r1], #2
 476              	.LVL48:
 477 002a 22F8024B 		strh	r4, [r2], #2	@ movhi
 478              	.LVL49:
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 479              		.loc 1 462 0 discriminator 2
 480 002e 013B     		subs	r3, r3, #1
 481              	.LVL50:
 482              	.L36:
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 483              		.loc 1 462 0 is_stmt 0 discriminator 1
 484 0030 002B     		cmp	r3, #0
 485 0032 F8D1     		bne	.L37
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pDstBuffer++;
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pSdramAddress++;               
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 18


 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Unlocked */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);       
 486              		.loc 1 470 0 is_stmt 1
 487 0034 80F82D30 		strb	r3, [r0, #45]
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK; 
 488              		.loc 1 472 0
 489 0038 1846     		mov	r0, r3
 490              	.LVL51:
 491 003a 04E0     		b	.L35
 492              	.LVL52:
 493              	.L38:
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 494              		.loc 1 449 0
 495 003c 0220     		movs	r0, #2
 496              	.LVL53:
 497 003e 02E0     		b	.L35
 498              	.LVL54:
 499              	.L39:
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 500              		.loc 1 454 0
 501 0040 0220     		movs	r0, #2
 502              	.LVL55:
 503 0042 00E0     		b	.L35
 504              	.LVL56:
 505              	.L40:
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }  
 506              		.loc 1 458 0
 507 0044 0120     		movs	r0, #1
 508              	.LVL57:
 509              	.L35:
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 510              		.loc 1 473 0
 511 0046 5DF8044B 		ldr	r4, [sp], #4
 512              	.LCFI10:
 513              		.cfi_restore 4
 514              		.cfi_def_cfa_offset 0
 515 004a 7047     		bx	lr
 516              		.cfi_endproc
 517              	.LFE140:
 519              		.section	.text.HAL_SDRAM_Write_16b,"ax",%progbits
 520              		.align	2
 521              		.global	HAL_SDRAM_Write_16b
 522              		.thumb
 523              		.thumb_func
 525              	HAL_SDRAM_Write_16b:
 526              	.LFB141:
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Writes 16-bit data buffer to SDRAM memory. 
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write  
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 19


 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_16b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint16_t *pS
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 527              		.loc 1 485 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 532              	.LVL58:
 533 0000 10B4     		push	{r4}
 534              	.LCFI11:
 535              		.cfi_def_cfa_offset 4
 536              		.cfi_offset 4, -4
 537              	.LVL59:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __IO uint16_t *pSdramAddress = (uint16_t *)pAddress;
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   uint32_t tmp = 0U;
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Locked */
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 538              		.loc 1 490 0
 539 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 540 0006 012C     		cmp	r4, #1
 541 0008 16D0     		beq	.L46
 542              		.loc 1 490 0 is_stmt 0 discriminator 2
 543 000a 0124     		movs	r4, #1
 544 000c 80F82D40 		strb	r4, [r0, #45]
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   tmp = hsdram->State;
 545              		.loc 1 493 0 is_stmt 1 discriminator 2
 546 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 547 0014 E4B2     		uxtb	r4, r4
 548              	.LVL60:
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(tmp == HAL_SDRAM_STATE_BUSY)
 549              		.loc 1 495 0 discriminator 2
 550 0016 022C     		cmp	r4, #2
 551 0018 10D0     		beq	.L47
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else if((tmp == HAL_SDRAM_STATE_PRECHARGED) || (tmp == HAL_SDRAM_STATE_WRITE_PROTECTED))
 552              		.loc 1 499 0
 553 001a 043C     		subs	r4, r4, #4
 554              	.LVL61:
 555 001c 012C     		cmp	r4, #1
 556 001e 05D8     		bhi	.L44
 557 0020 0EE0     		b	.L48
 558              	.LVL62:
 559              	.L45:
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return  HAL_ERROR; 
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Write data to memory */
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   for(; BufferSize != 0U; BufferSize--)
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 20


 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     *(__IO uint16_t *)pSdramAddress = *pSrcBuffer;
 560              		.loc 1 507 0 discriminator 2
 561 0022 32F8024B 		ldrh	r4, [r2], #2
 562              	.LVL63:
 563 0026 21F8024B 		strh	r4, [r1], #2	@ movhi
 564              	.LVL64:
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 565              		.loc 1 505 0 discriminator 2
 566 002a 013B     		subs	r3, r3, #1
 567              	.LVL65:
 568              	.L44:
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 569              		.loc 1 505 0 is_stmt 0 discriminator 1
 570 002c 002B     		cmp	r3, #0
 571 002e F8D1     		bne	.L45
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pSrcBuffer++;
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pSdramAddress++;            
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Unlocked */
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);    
 572              		.loc 1 513 0 is_stmt 1
 573 0030 80F82D30 		strb	r3, [r0, #45]
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;   
 574              		.loc 1 515 0
 575 0034 1846     		mov	r0, r3
 576              	.LVL66:
 577 0036 04E0     		b	.L43
 578              	.LVL67:
 579              	.L46:
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 580              		.loc 1 490 0
 581 0038 0220     		movs	r0, #2
 582              	.LVL68:
 583 003a 02E0     		b	.L43
 584              	.LVL69:
 585              	.L47:
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 586              		.loc 1 497 0
 587 003c 0220     		movs	r0, #2
 588              	.LVL70:
 589 003e 00E0     		b	.L43
 590              	.LVL71:
 591              	.L48:
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 592              		.loc 1 501 0
 593 0040 0120     		movs	r0, #1
 594              	.LVL72:
 595              	.L43:
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 596              		.loc 1 516 0
 597 0042 5DF8044B 		ldr	r4, [sp], #4
 598              	.LCFI12:
 599              		.cfi_restore 4
 600              		.cfi_def_cfa_offset 0
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 21


 601 0046 7047     		bx	lr
 602              		.cfi_endproc
 603              	.LFE141:
 605              		.section	.text.HAL_SDRAM_Read_32b,"ax",%progbits
 606              		.align	2
 607              		.global	HAL_SDRAM_Read_32b
 608              		.thumb
 609              		.thumb_func
 611              	HAL_SDRAM_Read_32b:
 612              	.LFB142:
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Reads 32-bit data buffer from the SDRAM memory. 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer  
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_32b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pDs
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 613              		.loc 1 528 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618              	.LVL73:
 619 0000 10B4     		push	{r4}
 620              	.LCFI13:
 621              		.cfi_def_cfa_offset 4
 622              		.cfi_offset 4, -4
 623              	.LVL74:
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __IO uint32_t *pSdramAddress = (uint32_t *)pAddress;
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Locked */
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 624              		.loc 1 532 0
 625 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 626 0006 012C     		cmp	r4, #1
 627 0008 18D0     		beq	.L54
 628              		.loc 1 532 0 is_stmt 0 discriminator 2
 629 000a 0124     		movs	r4, #1
 630 000c 80F82D40 		strb	r4, [r0, #45]
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 631              		.loc 1 535 0 is_stmt 1 discriminator 2
 632 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 633 0014 E4B2     		uxtb	r4, r4
 634 0016 022C     		cmp	r4, #2
 635 0018 12D0     		beq	.L55
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_PRECHARGED)
 636              		.loc 1 539 0
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 22


 637 001a 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 638 001e E4B2     		uxtb	r4, r4
 639 0020 052C     		cmp	r4, #5
 640 0022 05D1     		bne	.L52
 641 0024 0EE0     		b	.L56
 642              	.LVL75:
 643              	.L53:
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return  HAL_ERROR; 
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }  
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Read data from source */
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   for(; BufferSize != 0U; BufferSize--)
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     *pDstBuffer = *(__IO uint32_t *)pSdramAddress;  
 644              		.loc 1 547 0 discriminator 2
 645 0026 51F8044B 		ldr	r4, [r1], #4
 646              	.LVL76:
 647 002a 42F8044B 		str	r4, [r2], #4
 648              	.LVL77:
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 649              		.loc 1 545 0 discriminator 2
 650 002e 013B     		subs	r3, r3, #1
 651              	.LVL78:
 652              	.L52:
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 653              		.loc 1 545 0 is_stmt 0 discriminator 1
 654 0030 002B     		cmp	r3, #0
 655 0032 F8D1     		bne	.L53
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pDstBuffer++;
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pSdramAddress++;               
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Unlocked */
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);       
 656              		.loc 1 553 0 is_stmt 1
 657 0034 80F82D30 		strb	r3, [r0, #45]
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK; 
 658              		.loc 1 555 0
 659 0038 1846     		mov	r0, r3
 660              	.LVL79:
 661 003a 04E0     		b	.L51
 662              	.LVL80:
 663              	.L54:
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 664              		.loc 1 532 0
 665 003c 0220     		movs	r0, #2
 666              	.LVL81:
 667 003e 02E0     		b	.L51
 668              	.LVL82:
 669              	.L55:
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 670              		.loc 1 537 0
 671 0040 0220     		movs	r0, #2
 672              	.LVL83:
 673 0042 00E0     		b	.L51
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 23


 674              	.LVL84:
 675              	.L56:
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }  
 676              		.loc 1 541 0
 677 0044 0120     		movs	r0, #1
 678              	.LVL85:
 679              	.L51:
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 680              		.loc 1 556 0
 681 0046 5DF8044B 		ldr	r4, [sp], #4
 682              	.LCFI14:
 683              		.cfi_restore 4
 684              		.cfi_def_cfa_offset 0
 685 004a 7047     		bx	lr
 686              		.cfi_endproc
 687              	.LFE142:
 689              		.section	.text.HAL_SDRAM_Write_32b,"ax",%progbits
 690              		.align	2
 691              		.global	HAL_SDRAM_Write_32b
 692              		.thumb
 693              		.thumb_func
 695              	HAL_SDRAM_Write_32b:
 696              	.LFB143:
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Writes 32-bit data buffer to SDRAM memory. 
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write  
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_32b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pS
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 697              		.loc 1 568 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702              	.LVL86:
 703 0000 10B4     		push	{r4}
 704              	.LCFI15:
 705              		.cfi_def_cfa_offset 4
 706              		.cfi_offset 4, -4
 707              	.LVL87:
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __IO uint32_t *pSdramAddress = (uint32_t *)pAddress;
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   uint32_t tmp = 0U;
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Locked */
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 708              		.loc 1 573 0
 709 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 710 0006 012C     		cmp	r4, #1
 711 0008 16D0     		beq	.L62
 712              		.loc 1 573 0 is_stmt 0 discriminator 2
 713 000a 0124     		movs	r4, #1
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 24


 714 000c 80F82D40 		strb	r4, [r0, #45]
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   tmp = hsdram->State;
 715              		.loc 1 576 0 is_stmt 1 discriminator 2
 716 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 717 0014 E4B2     		uxtb	r4, r4
 718              	.LVL88:
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(tmp == HAL_SDRAM_STATE_BUSY)
 719              		.loc 1 578 0 discriminator 2
 720 0016 022C     		cmp	r4, #2
 721 0018 10D0     		beq	.L63
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else if((tmp == HAL_SDRAM_STATE_PRECHARGED) || (tmp == HAL_SDRAM_STATE_WRITE_PROTECTED))
 722              		.loc 1 582 0
 723 001a 043C     		subs	r4, r4, #4
 724              	.LVL89:
 725 001c 012C     		cmp	r4, #1
 726 001e 05D8     		bhi	.L60
 727 0020 0EE0     		b	.L64
 728              	.LVL90:
 729              	.L61:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return  HAL_ERROR; 
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Write data to memory */
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   for(; BufferSize != 0U; BufferSize--)
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     *(__IO uint32_t *)pSdramAddress = *pSrcBuffer;
 730              		.loc 1 590 0 discriminator 2
 731 0022 52F8044B 		ldr	r4, [r2], #4
 732              	.LVL91:
 733 0026 41F8044B 		str	r4, [r1], #4
 734              	.LVL92:
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 735              		.loc 1 588 0 discriminator 2
 736 002a 013B     		subs	r3, r3, #1
 737              	.LVL93:
 738              	.L60:
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 739              		.loc 1 588 0 is_stmt 0 discriminator 1
 740 002c 002B     		cmp	r3, #0
 741 002e F8D1     		bne	.L61
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pSrcBuffer++;
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     pSdramAddress++;          
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Unlocked */
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);    
 742              		.loc 1 596 0 is_stmt 1
 743 0030 80F82D30 		strb	r3, [r0, #45]
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;  
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 25


 744              		.loc 1 598 0
 745 0034 1846     		mov	r0, r3
 746              	.LVL94:
 747 0036 04E0     		b	.L59
 748              	.LVL95:
 749              	.L62:
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 750              		.loc 1 573 0
 751 0038 0220     		movs	r0, #2
 752              	.LVL96:
 753 003a 02E0     		b	.L59
 754              	.LVL97:
 755              	.L63:
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 756              		.loc 1 580 0
 757 003c 0220     		movs	r0, #2
 758              	.LVL98:
 759 003e 00E0     		b	.L59
 760              	.LVL99:
 761              	.L64:
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 762              		.loc 1 584 0
 763 0040 0120     		movs	r0, #1
 764              	.LVL100:
 765              	.L59:
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 766              		.loc 1 599 0
 767 0042 5DF8044B 		ldr	r4, [sp], #4
 768              	.LCFI16:
 769              		.cfi_restore 4
 770              		.cfi_def_cfa_offset 0
 771 0046 7047     		bx	lr
 772              		.cfi_endproc
 773              	.LFE143:
 775              		.section	.text.HAL_SDRAM_Read_DMA,"ax",%progbits
 776              		.align	2
 777              		.global	HAL_SDRAM_Read_DMA
 778              		.thumb
 779              		.thumb_func
 781              	HAL_SDRAM_Read_DMA:
 782              	.LFB144:
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Reads a Words data from the SDRAM memory using DMA transfer. 
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer  
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_DMA(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pDs
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 783              		.loc 1 611 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 26


 787              	.LVL101:
 788 0000 38B5     		push	{r3, r4, r5, lr}
 789              	.LCFI17:
 790              		.cfi_def_cfa_offset 16
 791              		.cfi_offset 3, -16
 792              		.cfi_offset 4, -12
 793              		.cfi_offset 5, -8
 794              		.cfi_offset 14, -4
 795              	.LVL102:
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   uint32_t tmp = 0U;
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Locked */
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 796              		.loc 1 615 0
 797 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 798 0006 012C     		cmp	r4, #1
 799 0008 17D0     		beq	.L68
 800              		.loc 1 615 0 is_stmt 0 discriminator 2
 801 000a 0124     		movs	r4, #1
 802 000c 80F82D40 		strb	r4, [r0, #45]
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */  
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   tmp = hsdram->State;
 803              		.loc 1 618 0 is_stmt 1 discriminator 2
 804 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 805 0014 E4B2     		uxtb	r4, r4
 806              	.LVL103:
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(tmp == HAL_SDRAM_STATE_BUSY)
 807              		.loc 1 620 0 discriminator 2
 808 0016 022C     		cmp	r4, #2
 809 0018 11D0     		beq	.L69
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else if(tmp == HAL_SDRAM_STATE_PRECHARGED)
 810              		.loc 1 624 0
 811 001a 052C     		cmp	r4, #5
 812 001c 11D0     		beq	.L70
 813 001e 0446     		mov	r4, r0
 814              	.LVL104:
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return  HAL_ERROR; 
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }  
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Configure DMA user callbacks */
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->hdma->XferCpltCallback  = HAL_SDRAM_DMA_XferCpltCallback;
 815              		.loc 1 630 0
 816 0020 006B     		ldr	r0, [r0, #48]
 817              	.LVL105:
 818 0022 094D     		ldr	r5, .L72
 819 0024 C563     		str	r5, [r0, #60]
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->hdma->XferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 820              		.loc 1 631 0
 821 0026 206B     		ldr	r0, [r4, #48]
 822 0028 084D     		ldr	r5, .L72+4
 823 002a C564     		str	r5, [r0, #76]
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 27


 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Enable the DMA Stream */
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   HAL_DMA_Start_IT(hsdram->hdma, (uint32_t)pAddress, (uint32_t)pDstBuffer, (uint32_t)BufferSize);
 824              		.loc 1 634 0
 825 002c 206B     		ldr	r0, [r4, #48]
 826 002e FFF7FEFF 		bl	HAL_DMA_Start_IT
 827              	.LVL106:
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Unlocked */
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);  
 828              		.loc 1 637 0
 829 0032 0020     		movs	r0, #0
 830 0034 84F82D00 		strb	r0, [r4, #45]
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK; 
 831              		.loc 1 639 0
 832 0038 38BD     		pop	{r3, r4, r5, pc}
 833              	.LVL107:
 834              	.L68:
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 835              		.loc 1 615 0
 836 003a 0220     		movs	r0, #2
 837              	.LVL108:
 838 003c 38BD     		pop	{r3, r4, r5, pc}
 839              	.LVL109:
 840              	.L69:
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 841              		.loc 1 622 0
 842 003e 0220     		movs	r0, #2
 843              	.LVL110:
 844 0040 38BD     		pop	{r3, r4, r5, pc}
 845              	.LVL111:
 846              	.L70:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }  
 847              		.loc 1 626 0
 848 0042 0120     		movs	r0, #1
 849              	.LVL112:
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 850              		.loc 1 640 0
 851 0044 38BD     		pop	{r3, r4, r5, pc}
 852              	.LVL113:
 853              	.L73:
 854 0046 00BF     		.align	2
 855              	.L72:
 856 0048 00000000 		.word	HAL_SDRAM_DMA_XferCpltCallback
 857 004c 00000000 		.word	HAL_SDRAM_DMA_XferErrorCallback
 858              		.cfi_endproc
 859              	.LFE144:
 861              		.section	.text.HAL_SDRAM_Write_DMA,"ax",%progbits
 862              		.align	2
 863              		.global	HAL_SDRAM_Write_DMA
 864              		.thumb
 865              		.thumb_func
 867              	HAL_SDRAM_Write_DMA:
 868              	.LFB145:
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 28


 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Writes a Words data buffer to SDRAM memory using DMA transfer.
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write  
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_DMA(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pS
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 869              		.loc 1 652 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL114:
 874 0000 38B5     		push	{r3, r4, r5, lr}
 875              	.LCFI18:
 876              		.cfi_def_cfa_offset 16
 877              		.cfi_offset 3, -16
 878              		.cfi_offset 4, -12
 879              		.cfi_offset 5, -8
 880              		.cfi_offset 14, -4
 881              	.LVL115:
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   uint32_t tmp = 0U;
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Locked */
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 882              		.loc 1 656 0
 883 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 884 0006 012C     		cmp	r4, #1
 885 0008 1BD0     		beq	.L76
 886              		.loc 1 656 0 is_stmt 0 discriminator 2
 887 000a 0124     		movs	r4, #1
 888 000c 80F82D40 		strb	r4, [r0, #45]
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */  
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   tmp = hsdram->State;
 889              		.loc 1 659 0 is_stmt 1 discriminator 2
 890 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 891 0014 E4B2     		uxtb	r4, r4
 892              	.LVL116:
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(tmp == HAL_SDRAM_STATE_BUSY)
 893              		.loc 1 661 0 discriminator 2
 894 0016 022C     		cmp	r4, #2
 895 0018 15D0     		beq	.L77
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else if((tmp == HAL_SDRAM_STATE_PRECHARGED) || (tmp == HAL_SDRAM_STATE_WRITE_PROTECTED))
 896              		.loc 1 665 0
 897 001a 043C     		subs	r4, r4, #4
 898              	.LVL117:
 899 001c 012C     		cmp	r4, #1
 900 001e 14D9     		bls	.L78
 901 0020 1446     		mov	r4, r2
 902              	.LVL118:
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 29


 903 0022 0A46     		mov	r2, r1
 904              	.LVL119:
 905 0024 0546     		mov	r5, r0
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return  HAL_ERROR; 
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }  
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Configure DMA user callbacks */
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->hdma->XferCpltCallback  = HAL_SDRAM_DMA_XferCpltCallback;
 906              		.loc 1 671 0
 907 0026 016B     		ldr	r1, [r0, #48]
 908              	.LVL120:
 909 0028 0948     		ldr	r0, .L80
 910              	.LVL121:
 911 002a C863     		str	r0, [r1, #60]
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->hdma->XferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 912              		.loc 1 672 0
 913 002c 296B     		ldr	r1, [r5, #48]
 914 002e 0948     		ldr	r0, .L80+4
 915 0030 C864     		str	r0, [r1, #76]
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Enable the DMA Stream */
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   HAL_DMA_Start_IT(hsdram->hdma, (uint32_t)pSrcBuffer, (uint32_t)pAddress, (uint32_t)BufferSize);
 916              		.loc 1 675 0
 917 0032 2146     		mov	r1, r4
 918 0034 286B     		ldr	r0, [r5, #48]
 919 0036 FFF7FEFF 		bl	HAL_DMA_Start_IT
 920              	.LVL122:
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process Unlocked */
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 921              		.loc 1 678 0
 922 003a 0020     		movs	r0, #0
 923 003c 85F82D00 		strb	r0, [r5, #45]
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;
 924              		.loc 1 680 0
 925 0040 38BD     		pop	{r3, r4, r5, pc}
 926              	.LVL123:
 927              	.L76:
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 928              		.loc 1 656 0
 929 0042 0220     		movs	r0, #2
 930              	.LVL124:
 931 0044 38BD     		pop	{r3, r4, r5, pc}
 932              	.LVL125:
 933              	.L77:
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 934              		.loc 1 663 0
 935 0046 0220     		movs	r0, #2
 936              	.LVL126:
 937 0048 38BD     		pop	{r3, r4, r5, pc}
 938              	.LVL127:
 939              	.L78:
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }  
 940              		.loc 1 667 0
 941 004a 0120     		movs	r0, #1
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 30


 942              	.LVL128:
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 943              		.loc 1 681 0
 944 004c 38BD     		pop	{r3, r4, r5, pc}
 945              	.LVL129:
 946              	.L81:
 947 004e 00BF     		.align	2
 948              	.L80:
 949 0050 00000000 		.word	HAL_SDRAM_DMA_XferCpltCallback
 950 0054 00000000 		.word	HAL_SDRAM_DMA_XferErrorCallback
 951              		.cfi_endproc
 952              	.LFE145:
 954              		.section	.text.HAL_SDRAM_WriteProtection_Enable,"ax",%progbits
 955              		.align	2
 956              		.global	HAL_SDRAM_WriteProtection_Enable
 957              		.thumb
 958              		.thumb_func
 960              	HAL_SDRAM_WriteProtection_Enable:
 961              	.LFB146:
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Register a User SDRAM Callback
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *         To be used instead of the weak (surcharged) predefined callback
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be registered
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_INIT_CB_ID       SDRAM MspInit callback ID
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_DEINIT_CB_ID     SDRAM MspDeInit callback ID
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_REFRESH_ERR_CB_ID    SDRAM Refresh Error callback ID
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param pCallback : pointer to the Callback function
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval status
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_RegisterCallback (SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDType
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(pCallback == NULL)
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_ERROR;
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process locked */
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   state = hsdram->State;
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     switch (CallbackId)
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     {
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->MspInitCallback = pCallback;
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->MspDeInitCallback = pCallback;
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 31


 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_REFRESH_ERR_CB_ID :
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->RefreshErrorCallback = pCallback;
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     default :
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       /* update return status */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       status =  HAL_ERROR;
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     }
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_RESET)
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     switch (CallbackId)
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     {
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->MspInitCallback = pCallback;
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->MspDeInitCallback = pCallback;
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     default :
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       /* update return status */
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       status =  HAL_ERROR;
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     }
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     /* update return status */
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     status =  HAL_ERROR;
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Release Lock */
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return status;
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Unregister a User SDRAM Callback
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *         SDRAM Callback is redirected to the weak (surcharged) predefined callback
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be unregistered
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_INIT_CB_ID       SDRAM MspInit callback ID
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_DEINIT_CB_ID     SDRAM MspDeInit callback ID
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_REFRESH_ERR_CB_ID    SDRAM Refresh Error callback ID
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_CPLT_CB_ID  SDRAM DMA Xfer Complete callback ID
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_ERR_CB_ID   SDRAM DMA Xfer Error callback ID
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval status
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_UnRegisterCallback (SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDTy
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process locked */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 32


 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   state = hsdram->State;
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     switch (CallbackId)
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     {
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_REFRESH_ERR_CB_ID :
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->RefreshErrorCallback = HAL_SDRAM_RefreshErrorCallback;
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_CPLT_CB_ID :
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->DmaXferCpltCallback = HAL_SDRAM_DMA_XferCpltCallback;
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_ERR_CB_ID :
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->DmaXferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     default :
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       /* update return status */
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       status =  HAL_ERROR;
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     }
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_RESET)
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     switch (CallbackId)
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     {
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     default :
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       /* update return status */
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       status =  HAL_ERROR;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     }
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     /* update return status */
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     status =  HAL_ERROR;
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Release Lock */
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return status;
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Register a User SDRAM Callback for DMA transfers
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *         To be used instead of the weak (surcharged) predefined callback
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 33


 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be registered
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_CPLT_CB_ID  SDRAM DMA Xfer Complete callback ID
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_ERR_CB_ID   SDRAM DMA Xfer Error callback ID
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param pCallback : pointer to the Callback function
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval status
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_RegisterDmaCallback(SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDTy
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(pCallback == NULL)
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_ERROR;
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Process locked */
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   state = hsdram->State;
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     switch (CallbackId)
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     {
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_CPLT_CB_ID :
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->DmaXferCpltCallback = pCallback;
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_ERR_CB_ID :
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       hsdram->DmaXferErrorCallback = pCallback;
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     default :
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       /* update return status */
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       status =  HAL_ERROR;
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****       break;
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     }
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     /* update return status */
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     status =  HAL_ERROR;
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Release Lock */
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return status;
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** #endif
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @}
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group3 Control functions 
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****  *  @brief   management functions 
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****  *
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** @verbatim   
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 34


 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ==============================================================================
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****                          ##### SDRAM Control functions #####
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ==============================================================================  
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   [..]
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     This subsection provides a set of functions allowing to control dynamically
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     the SDRAM interface.
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** @endverbatim
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @{
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Enables dynamically SDRAM write protection.
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_WriteProtection_Enable(SDRAM_HandleTypeDef *hsdram)
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** { 
 962              		.loc 1 909 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              	.LVL130:
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */ 
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 967              		.loc 1 911 0
 968 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 969 0004 DBB2     		uxtb	r3, r3
 970 0006 022B     		cmp	r3, #2
 971 0008 0DD0     		beq	.L84
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */ 
 972              		.loc 1 909 0
 973 000a 10B5     		push	{r4, lr}
 974              	.LCFI19:
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 4, -8
 977              		.cfi_offset 14, -4
 978 000c 0446     		mov	r4, r0
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM state */
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 979              		.loc 1 917 0
 980 000e 0223     		movs	r3, #2
 981 0010 80F82C30 		strb	r3, [r0, #44]
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Enable write protection */
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   FMC_SDRAM_WriteProtection_Enable(hsdram->Instance, hsdram->Init.SDBank);
 982              		.loc 1 920 0
 983 0014 4168     		ldr	r1, [r0, #4]
 984 0016 0068     		ldr	r0, [r0]
 985              	.LVL131:
 986 0018 FFF7FEFF 		bl	FMC_SDRAM_WriteProtection_Enable
 987              	.LVL132:
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 35


 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM state */
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_WRITE_PROTECTED;
 988              		.loc 1 923 0
 989 001c 0423     		movs	r3, #4
 990 001e 84F82C30 		strb	r3, [r4, #44]
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;  
 991              		.loc 1 925 0
 992 0022 0020     		movs	r0, #0
 993 0024 10BD     		pop	{r4, pc}
 994              	.LVL133:
 995              	.L84:
 996              	.LCFI20:
 997              		.cfi_def_cfa_offset 0
 998              		.cfi_restore 4
 999              		.cfi_restore 14
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 1000              		.loc 1 913 0
 1001 0026 0220     		movs	r0, #2
 1002              	.LVL134:
 1003 0028 7047     		bx	lr
 1004              		.cfi_endproc
 1005              	.LFE146:
 1007 002a 00BF     		.section	.text.HAL_SDRAM_WriteProtection_Disable,"ax",%progbits
 1008              		.align	2
 1009              		.global	HAL_SDRAM_WriteProtection_Disable
 1010              		.thumb
 1011              		.thumb_func
 1013              	HAL_SDRAM_WriteProtection_Disable:
 1014              	.LFB147:
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Disables dynamically SDRAM write protection.
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_WriteProtection_Disable(SDRAM_HandleTypeDef *hsdram)
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 1015              		.loc 1 935 0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              	.LVL135:
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 1020              		.loc 1 937 0
 1021 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1022 0004 DBB2     		uxtb	r3, r3
 1023 0006 022B     		cmp	r3, #2
 1024 0008 0DD0     		beq	.L89
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1025              		.loc 1 935 0
 1026 000a 10B5     		push	{r4, lr}
 1027              	.LCFI21:
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 36


 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 4, -8
 1030              		.cfi_offset 14, -4
 1031 000c 0446     		mov	r4, r0
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM state */
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 1032              		.loc 1 943 0
 1033 000e 0223     		movs	r3, #2
 1034 0010 80F82C30 		strb	r3, [r0, #44]
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Disable write protection */
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   FMC_SDRAM_WriteProtection_Disable(hsdram->Instance, hsdram->Init.SDBank);
 1035              		.loc 1 946 0
 1036 0014 4168     		ldr	r1, [r0, #4]
 1037 0016 0068     		ldr	r0, [r0]
 1038              	.LVL136:
 1039 0018 FFF7FEFF 		bl	FMC_SDRAM_WriteProtection_Disable
 1040              	.LVL137:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM state */
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
 1041              		.loc 1 949 0
 1042 001c 0123     		movs	r3, #1
 1043 001e 84F82C30 		strb	r3, [r4, #44]
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;
 1044              		.loc 1 951 0
 1045 0022 0020     		movs	r0, #0
 1046 0024 10BD     		pop	{r4, pc}
 1047              	.LVL138:
 1048              	.L89:
 1049              	.LCFI22:
 1050              		.cfi_def_cfa_offset 0
 1051              		.cfi_restore 4
 1052              		.cfi_restore 14
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 1053              		.loc 1 939 0
 1054 0026 0220     		movs	r0, #2
 1055              	.LVL139:
 1056 0028 7047     		bx	lr
 1057              		.cfi_endproc
 1058              	.LFE147:
 1060 002a 00BF     		.section	.text.HAL_SDRAM_SendCommand,"ax",%progbits
 1061              		.align	2
 1062              		.global	HAL_SDRAM_SendCommand
 1063              		.thumb
 1064              		.thumb_func
 1066              	HAL_SDRAM_SendCommand:
 1067              	.LFB148:
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Sends Command to the SDRAM bank.
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 37


 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  Command SDRAM command structure
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  Timeout Timeout duration
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */  
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Comm
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 1068              		.loc 1 963 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              	.LVL140:
 1073 0000 38B5     		push	{r3, r4, r5, lr}
 1074              	.LCFI23:
 1075              		.cfi_def_cfa_offset 16
 1076              		.cfi_offset 3, -16
 1077              		.cfi_offset 4, -12
 1078              		.cfi_offset 5, -8
 1079              		.cfi_offset 14, -4
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 1080              		.loc 1 965 0
 1081 0002 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1082 0006 DBB2     		uxtb	r3, r3
 1083 0008 022B     		cmp	r3, #2
 1084 000a 14D0     		beq	.L95
 1085 000c 0D46     		mov	r5, r1
 1086 000e 0446     		mov	r4, r0
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM state */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 1087              		.loc 1 971 0
 1088 0010 0223     		movs	r3, #2
 1089 0012 80F82C30 		strb	r3, [r0, #44]
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Send SDRAM command */
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 1090              		.loc 1 974 0
 1091 0016 0068     		ldr	r0, [r0]
 1092              	.LVL141:
 1093 0018 FFF7FEFF 		bl	FMC_SDRAM_SendCommand
 1094              	.LVL142:
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM controller state */
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 1095              		.loc 1 977 0
 1096 001c 2B68     		ldr	r3, [r5]
 1097 001e 022B     		cmp	r3, #2
 1098 0020 04D1     		bne	.L94
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 1099              		.loc 1 979 0
 1100 0022 0523     		movs	r3, #5
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 38


 1101 0024 84F82C30 		strb	r3, [r4, #44]
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   else
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;  
 1102              		.loc 1 986 0
 1103 0028 0020     		movs	r0, #0
 1104 002a 38BD     		pop	{r3, r4, r5, pc}
 1105              	.LVL143:
 1106              	.L94:
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 1107              		.loc 1 983 0
 1108 002c 0123     		movs	r3, #1
 1109 002e 84F82C30 		strb	r3, [r4, #44]
 1110              		.loc 1 986 0
 1111 0032 0020     		movs	r0, #0
 1112 0034 38BD     		pop	{r3, r4, r5, pc}
 1113              	.LVL144:
 1114              	.L95:
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   }
 1115              		.loc 1 967 0
 1116 0036 0220     		movs	r0, #2
 1117              	.LVL145:
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 1118              		.loc 1 987 0
 1119 0038 38BD     		pop	{r3, r4, r5, pc}
 1120              		.cfi_endproc
 1121              	.LFE148:
 1123 003a 00BF     		.section	.text.HAL_SDRAM_ProgramRefreshRate,"ax",%progbits
 1124              		.align	2
 1125              		.global	HAL_SDRAM_ProgramRefreshRate
 1126              		.thumb
 1127              		.thumb_func
 1129              	HAL_SDRAM_ProgramRefreshRate:
 1130              	.LFB149:
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Programs the SDRAM Memory Refresh rate.
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.  
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  RefreshRate The SDRAM refresh rate value       
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 1131              		.loc 1 997 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135              	.LVL146:
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 1136              		.loc 1 999 0
 1137 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 39


 1138 0004 DBB2     		uxtb	r3, r3
 1139 0006 022B     		cmp	r3, #2
 1140 0008 0CD0     		beq	.L99
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1141              		.loc 1 997 0
 1142 000a 10B5     		push	{r4, lr}
 1143              	.LCFI24:
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 4, -8
 1146              		.cfi_offset 14, -4
 1147 000c 0446     		mov	r4, r0
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   } 
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM state */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 1148              		.loc 1 1005 0
 1149 000e 0223     		movs	r3, #2
 1150 0010 80F82C30 		strb	r3, [r0, #44]
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Program the refresh rate */
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 1151              		.loc 1 1008 0
 1152 0014 0068     		ldr	r0, [r0]
 1153              	.LVL147:
 1154 0016 FFF7FEFF 		bl	FMC_SDRAM_ProgramRefreshRate
 1155              	.LVL148:
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM state */
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
 1156              		.loc 1 1011 0
 1157 001a 0123     		movs	r3, #1
 1158 001c 84F82C30 		strb	r3, [r4, #44]
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;   
 1159              		.loc 1 1013 0
 1160 0020 0020     		movs	r0, #0
 1161 0022 10BD     		pop	{r4, pc}
 1162              	.LVL149:
 1163              	.L99:
 1164              	.LCFI25:
 1165              		.cfi_def_cfa_offset 0
 1166              		.cfi_restore 4
 1167              		.cfi_restore 14
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   } 
 1168              		.loc 1 1001 0
 1169 0024 0220     		movs	r0, #2
 1170              	.LVL150:
 1171 0026 7047     		bx	lr
 1172              		.cfi_endproc
 1173              	.LFE149:
 1175              		.section	.text.HAL_SDRAM_SetAutoRefreshNumber,"ax",%progbits
 1176              		.align	2
 1177              		.global	HAL_SDRAM_SetAutoRefreshNumber
 1178              		.thumb
 1179              		.thumb_func
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 40


 1181              	HAL_SDRAM_SetAutoRefreshNumber:
 1182              	.LFB150:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Sets the Number of consecutive SDRAM Memory auto Refresh commands.
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.  
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  AutoRefreshNumber The SDRAM auto Refresh number       
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL status
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_SetAutoRefreshNumber(SDRAM_HandleTypeDef *hsdram, uint32_t AutoRefreshN
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 1183              		.loc 1 1024 0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 1187              	.LVL151:
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 1188              		.loc 1 1026 0
 1189 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1190 0004 DBB2     		uxtb	r3, r3
 1191 0006 022B     		cmp	r3, #2
 1192 0008 0CD0     		beq	.L104
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1193              		.loc 1 1024 0
 1194 000a 10B5     		push	{r4, lr}
 1195              	.LCFI26:
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 4, -8
 1198              		.cfi_offset 14, -4
 1199 000c 0446     		mov	r4, r0
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   {
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     return HAL_BUSY;
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   } 
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM state */
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 1200              		.loc 1 1032 0
 1201 000e 0223     		movs	r3, #2
 1202 0010 80F82C30 		strb	r3, [r0, #44]
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Set the Auto-Refresh number */
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   FMC_SDRAM_SetAutoRefreshNumber(hsdram->Instance ,AutoRefreshNumber);
 1203              		.loc 1 1035 0
 1204 0014 0068     		ldr	r0, [r0]
 1205              	.LVL152:
 1206 0016 FFF7FEFF 		bl	FMC_SDRAM_SetAutoRefreshNumber
 1207              	.LVL153:
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Update the SDRAM state */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
 1208              		.loc 1 1038 0
 1209 001a 0123     		movs	r3, #1
 1210 001c 84F82C30 		strb	r3, [r4, #44]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 41


1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return HAL_OK;
 1211              		.loc 1 1040 0
 1212 0020 0020     		movs	r0, #0
 1213 0022 10BD     		pop	{r4, pc}
 1214              	.LVL154:
 1215              	.L104:
 1216              	.LCFI27:
 1217              		.cfi_def_cfa_offset 0
 1218              		.cfi_restore 4
 1219              		.cfi_restore 14
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   } 
 1220              		.loc 1 1028 0
 1221 0024 0220     		movs	r0, #2
 1222              	.LVL155:
 1223 0026 7047     		bx	lr
 1224              		.cfi_endproc
 1225              	.LFE150:
 1227              		.section	.text.HAL_SDRAM_GetModeStatus,"ax",%progbits
 1228              		.align	2
 1229              		.global	HAL_SDRAM_GetModeStatus
 1230              		.thumb
 1231              		.thumb_func
 1233              	HAL_SDRAM_GetModeStatus:
 1234              	.LFB151:
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Returns the SDRAM memory current mode.
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval The SDRAM memory mode.        
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** uint32_t HAL_SDRAM_GetModeStatus(SDRAM_HandleTypeDef *hsdram)
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 1235              		.loc 1 1050 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              	.LVL156:
 1240 0000 08B5     		push	{r3, lr}
 1241              	.LCFI28:
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 3, -8
 1244              		.cfi_offset 14, -4
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   /* Return the SDRAM memory current mode */
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return(FMC_SDRAM_GetModeStatus(hsdram->Instance, hsdram->Init.SDBank));
 1245              		.loc 1 1052 0
 1246 0002 4168     		ldr	r1, [r0, #4]
 1247 0004 0068     		ldr	r0, [r0]
 1248              	.LVL157:
 1249 0006 FFF7FEFF 		bl	FMC_SDRAM_GetModeStatus
 1250              	.LVL158:
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 1251              		.loc 1 1053 0
 1252 000a 08BD     		pop	{r3, pc}
 1253              		.cfi_endproc
 1254              	.LFE151:
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 42


 1256              		.section	.text.HAL_SDRAM_GetState,"ax",%progbits
 1257              		.align	2
 1258              		.global	HAL_SDRAM_GetState
 1259              		.thumb
 1260              		.thumb_func
 1262              	HAL_SDRAM_GetState:
 1263              	.LFB152:
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @}
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group4 State functions 
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****  *  @brief   Peripheral State functions 
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****  *
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** @verbatim   
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ==============================================================================
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****                       ##### SDRAM State functions #####
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   ==============================================================================  
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   [..]
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     This subsection permits to get in run-time the status of the SDRAM controller 
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****     and the data flow.
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** @endverbatim
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @{
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** 
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** /**
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @brief  Returns the SDRAM state.
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   * @retval HAL state
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   */
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** HAL_SDRAM_StateTypeDef HAL_SDRAM_GetState(SDRAM_HandleTypeDef *hsdram)
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** {
 1264              		.loc 1 1081 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              		@ link register save eliminated.
 1269              	.LVL159:
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c ****   return hsdram->State;
 1270              		.loc 1 1082 0
 1271 0000 90F82C00 		ldrb	r0, [r0, #44]	@ zero_extendqisi2
 1272              	.LVL160:
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sdram.c **** }
 1273              		.loc 1 1083 0
 1274 0004 7047     		bx	lr
 1275              		.cfi_endproc
 1276              	.LFE152:
 1278 0006 00BF     		.text
 1279              	.Letext0:
 1280              		.file 2 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_
 1281              		.file 3 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 1282              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1283              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1284              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 43


 1285              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_fmc.h"
 1286              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sdram.h"
 1287              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_sdram.c
C:\WINDOWS\TEMP\cczo1jdJ.s:22     .text.HAL_SDRAM_DMA_XferCpltCallback:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:27     .text.HAL_SDRAM_DMA_XferCpltCallback:00000000 HAL_SDRAM_DMA_XferCpltCallback
C:\WINDOWS\TEMP\cczo1jdJ.s:41     .text.HAL_SDRAM_DMA_XferErrorCallback:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:46     .text.HAL_SDRAM_DMA_XferErrorCallback:00000000 HAL_SDRAM_DMA_XferErrorCallback
C:\WINDOWS\TEMP\cczo1jdJ.s:59     .text.HAL_SDRAM_MspInit:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:64     .text.HAL_SDRAM_MspInit:00000000 HAL_SDRAM_MspInit
C:\WINDOWS\TEMP\cczo1jdJ.s:77     .text.HAL_SDRAM_Init:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:82     .text.HAL_SDRAM_Init:00000000 HAL_SDRAM_Init
C:\WINDOWS\TEMP\cczo1jdJ.s:148    .text.HAL_SDRAM_MspDeInit:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:153    .text.HAL_SDRAM_MspDeInit:00000000 HAL_SDRAM_MspDeInit
C:\WINDOWS\TEMP\cczo1jdJ.s:166    .text.HAL_SDRAM_DeInit:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:171    .text.HAL_SDRAM_DeInit:00000000 HAL_SDRAM_DeInit
C:\WINDOWS\TEMP\cczo1jdJ.s:204    .text.HAL_SDRAM_RefreshErrorCallback:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:209    .text.HAL_SDRAM_RefreshErrorCallback:00000000 HAL_SDRAM_RefreshErrorCallback
C:\WINDOWS\TEMP\cczo1jdJ.s:222    .text.HAL_SDRAM_IRQHandler:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:227    .text.HAL_SDRAM_IRQHandler:00000000 HAL_SDRAM_IRQHandler
C:\WINDOWS\TEMP\cczo1jdJ.s:266    .text.HAL_SDRAM_Read_8b:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:271    .text.HAL_SDRAM_Read_8b:00000000 HAL_SDRAM_Read_8b
C:\WINDOWS\TEMP\cczo1jdJ.s:350    .text.HAL_SDRAM_Write_8b:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:355    .text.HAL_SDRAM_Write_8b:00000000 HAL_SDRAM_Write_8b
C:\WINDOWS\TEMP\cczo1jdJ.s:436    .text.HAL_SDRAM_Read_16b:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:441    .text.HAL_SDRAM_Read_16b:00000000 HAL_SDRAM_Read_16b
C:\WINDOWS\TEMP\cczo1jdJ.s:520    .text.HAL_SDRAM_Write_16b:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:525    .text.HAL_SDRAM_Write_16b:00000000 HAL_SDRAM_Write_16b
C:\WINDOWS\TEMP\cczo1jdJ.s:606    .text.HAL_SDRAM_Read_32b:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:611    .text.HAL_SDRAM_Read_32b:00000000 HAL_SDRAM_Read_32b
C:\WINDOWS\TEMP\cczo1jdJ.s:690    .text.HAL_SDRAM_Write_32b:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:695    .text.HAL_SDRAM_Write_32b:00000000 HAL_SDRAM_Write_32b
C:\WINDOWS\TEMP\cczo1jdJ.s:776    .text.HAL_SDRAM_Read_DMA:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:781    .text.HAL_SDRAM_Read_DMA:00000000 HAL_SDRAM_Read_DMA
C:\WINDOWS\TEMP\cczo1jdJ.s:856    .text.HAL_SDRAM_Read_DMA:00000048 $d
C:\WINDOWS\TEMP\cczo1jdJ.s:862    .text.HAL_SDRAM_Write_DMA:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:867    .text.HAL_SDRAM_Write_DMA:00000000 HAL_SDRAM_Write_DMA
C:\WINDOWS\TEMP\cczo1jdJ.s:949    .text.HAL_SDRAM_Write_DMA:00000050 $d
C:\WINDOWS\TEMP\cczo1jdJ.s:955    .text.HAL_SDRAM_WriteProtection_Enable:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:960    .text.HAL_SDRAM_WriteProtection_Enable:00000000 HAL_SDRAM_WriteProtection_Enable
C:\WINDOWS\TEMP\cczo1jdJ.s:1008   .text.HAL_SDRAM_WriteProtection_Disable:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:1013   .text.HAL_SDRAM_WriteProtection_Disable:00000000 HAL_SDRAM_WriteProtection_Disable
C:\WINDOWS\TEMP\cczo1jdJ.s:1061   .text.HAL_SDRAM_SendCommand:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:1066   .text.HAL_SDRAM_SendCommand:00000000 HAL_SDRAM_SendCommand
C:\WINDOWS\TEMP\cczo1jdJ.s:1124   .text.HAL_SDRAM_ProgramRefreshRate:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:1129   .text.HAL_SDRAM_ProgramRefreshRate:00000000 HAL_SDRAM_ProgramRefreshRate
C:\WINDOWS\TEMP\cczo1jdJ.s:1176   .text.HAL_SDRAM_SetAutoRefreshNumber:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:1181   .text.HAL_SDRAM_SetAutoRefreshNumber:00000000 HAL_SDRAM_SetAutoRefreshNumber
C:\WINDOWS\TEMP\cczo1jdJ.s:1228   .text.HAL_SDRAM_GetModeStatus:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:1233   .text.HAL_SDRAM_GetModeStatus:00000000 HAL_SDRAM_GetModeStatus
C:\WINDOWS\TEMP\cczo1jdJ.s:1257   .text.HAL_SDRAM_GetState:00000000 $t
C:\WINDOWS\TEMP\cczo1jdJ.s:1262   .text.HAL_SDRAM_GetState:00000000 HAL_SDRAM_GetState
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
FMC_SDRAM_Init
FMC_SDRAM_Timing_Init
FMC_SDRAM_DeInit
HAL_DMA_Start_IT
ARM GAS  C:\WINDOWS\TEMP\cczo1jdJ.s 			page 45


FMC_SDRAM_WriteProtection_Enable
FMC_SDRAM_WriteProtection_Disable
FMC_SDRAM_SendCommand
FMC_SDRAM_ProgramRefreshRate
FMC_SDRAM_SetAutoRefreshNumber
FMC_SDRAM_GetModeStatus
