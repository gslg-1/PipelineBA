ARM GAS  C:\WINDOWS\TEMP\cccpvm6y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_it.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.NMI_Handler,"ax",%progbits
  22              		.align	2
  23              		.global	NMI_Handler
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB135:
  29              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** #include "FreeRTOS.h"
  25:Src/stm32f4xx_it.c **** #include "task.h"
  26:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  28:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32f4xx_it.c **** 
ARM GAS  C:\WINDOWS\TEMP\cccpvm6y.s 			page 2


  30:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32f4xx_it.c **** 
  33:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  34:Src/stm32f4xx_it.c **** 
  35:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32f4xx_it.c ****  
  38:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  44:Src/stm32f4xx_it.c **** 
  45:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32f4xx_it.c **** 
  48:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  49:Src/stm32f4xx_it.c **** 
  50:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  54:Src/stm32f4xx_it.c **** 
  55:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  59:Src/stm32f4xx_it.c **** 
  60:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Src/stm32f4xx_it.c **** extern HCD_HandleTypeDef hhcd_USB_OTG_HS;
  62:Src/stm32f4xx_it.c **** extern DMA2D_HandleTypeDef hdma2d;
  63:Src/stm32f4xx_it.c **** extern LTDC_HandleTypeDef hltdc;
  64:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  67:Src/stm32f4xx_it.c **** 
  68:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  69:Src/stm32f4xx_it.c **** 
  70:Src/stm32f4xx_it.c **** /******************************************************************************/
  71:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  72:Src/stm32f4xx_it.c **** /******************************************************************************/
  73:Src/stm32f4xx_it.c **** /**
  74:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  75:Src/stm32f4xx_it.c ****   */
  76:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  77:Src/stm32f4xx_it.c **** {
  30              		.loc 1 77 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE135:
  39 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
ARM GAS  C:\WINDOWS\TEMP\cccpvm6y.s 			page 3


  40              		.align	2
  41              		.global	HardFault_Handler
  42              		.thumb
  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB136:
  78:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  79:Src/stm32f4xx_it.c **** 
  80:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  81:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  82:Src/stm32f4xx_it.c **** 
  83:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Src/stm32f4xx_it.c **** }
  85:Src/stm32f4xx_it.c **** 
  86:Src/stm32f4xx_it.c **** /**
  87:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Src/stm32f4xx_it.c ****   */
  89:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  90:Src/stm32f4xx_it.c **** {
  47              		.loc 1 90 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE136:
  58 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	2
  60              		.global	MemManage_Handler
  61              		.thumb
  62              		.thumb_func
  64              	MemManage_Handler:
  65              	.LFB137:
  91:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Src/stm32f4xx_it.c **** 
  93:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Src/stm32f4xx_it.c ****   while (1)
  95:Src/stm32f4xx_it.c ****   {
  96:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Src/stm32f4xx_it.c ****   }
  99:Src/stm32f4xx_it.c **** }
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c **** /**
 102:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 103:Src/stm32f4xx_it.c ****   */
 104:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 105:Src/stm32f4xx_it.c **** {
  66              		.loc 1 105 0
  67              		.cfi_startproc
  68              		@ Volatile: function does not return.
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
ARM GAS  C:\WINDOWS\TEMP\cccpvm6y.s 			page 4


  72              	.L5:
  73 0000 FEE7     		b	.L5
  74              		.cfi_endproc
  75              	.LFE137:
  77 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  78              		.align	2
  79              		.global	BusFault_Handler
  80              		.thumb
  81              		.thumb_func
  83              	BusFault_Handler:
  84              	.LFB138:
 106:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Src/stm32f4xx_it.c **** 
 108:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Src/stm32f4xx_it.c ****   while (1)
 110:Src/stm32f4xx_it.c ****   {
 111:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Src/stm32f4xx_it.c ****   }
 114:Src/stm32f4xx_it.c **** }
 115:Src/stm32f4xx_it.c **** 
 116:Src/stm32f4xx_it.c **** /**
 117:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Src/stm32f4xx_it.c ****   */
 119:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 120:Src/stm32f4xx_it.c **** {
  85              		.loc 1 120 0
  86              		.cfi_startproc
  87              		@ Volatile: function does not return.
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.L7:
  92 0000 FEE7     		b	.L7
  93              		.cfi_endproc
  94              	.LFE138:
  96 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  97              		.align	2
  98              		.global	UsageFault_Handler
  99              		.thumb
 100              		.thumb_func
 102              	UsageFault_Handler:
 103              	.LFB139:
 121:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Src/stm32f4xx_it.c **** 
 123:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Src/stm32f4xx_it.c ****   while (1)
 125:Src/stm32f4xx_it.c ****   {
 126:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Src/stm32f4xx_it.c ****   }
 129:Src/stm32f4xx_it.c **** }
 130:Src/stm32f4xx_it.c **** 
 131:Src/stm32f4xx_it.c **** /**
 132:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Src/stm32f4xx_it.c ****   */
 134:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
ARM GAS  C:\WINDOWS\TEMP\cccpvm6y.s 			page 5


 135:Src/stm32f4xx_it.c **** {
 104              		.loc 1 135 0
 105              		.cfi_startproc
 106              		@ Volatile: function does not return.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.L9:
 111 0000 FEE7     		b	.L9
 112              		.cfi_endproc
 113              	.LFE139:
 115 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 116              		.align	2
 117              		.global	DebugMon_Handler
 118              		.thumb
 119              		.thumb_func
 121              	DebugMon_Handler:
 122              	.LFB140:
 136:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Src/stm32f4xx_it.c **** 
 138:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Src/stm32f4xx_it.c ****   while (1)
 140:Src/stm32f4xx_it.c ****   {
 141:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Src/stm32f4xx_it.c ****   }
 144:Src/stm32f4xx_it.c **** }
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c **** /**
 147:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 148:Src/stm32f4xx_it.c ****   */
 149:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 150:Src/stm32f4xx_it.c **** {
 123              		.loc 1 150 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0000 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE140:
 132 0002 00BF     		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 133              		.align	2
 134              		.global	TIM6_DAC_IRQHandler
 135              		.thumb
 136              		.thumb_func
 138              	TIM6_DAC_IRQHandler:
 139              	.LFB141:
 151:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 152:Src/stm32f4xx_it.c **** 
 153:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 154:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 155:Src/stm32f4xx_it.c **** 
 156:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 157:Src/stm32f4xx_it.c **** }
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c **** /******************************************************************************/
ARM GAS  C:\WINDOWS\TEMP\cccpvm6y.s 			page 6


 160:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 161:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 162:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 163:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 164:Src/stm32f4xx_it.c **** /******************************************************************************/
 165:Src/stm32f4xx_it.c **** 
 166:Src/stm32f4xx_it.c **** /**
 167:Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 168:Src/stm32f4xx_it.c ****   */
 169:Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 170:Src/stm32f4xx_it.c **** {
 140              		.loc 1 170 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		.loc 1 170 0
 145 0000 08B5     		push	{r3, lr}
 146              	.LCFI0:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
 171:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 172:Src/stm32f4xx_it.c **** 
 173:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 174:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 150              		.loc 1 174 0
 151 0002 0248     		ldr	r0, .L13
 152 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 153              	.LVL0:
 154 0008 08BD     		pop	{r3, pc}
 155              	.L14:
 156 000a 00BF     		.align	2
 157              	.L13:
 158 000c 00000000 		.word	htim6
 159              		.cfi_endproc
 160              	.LFE141:
 162              		.section	.text.OTG_HS_IRQHandler,"ax",%progbits
 163              		.align	2
 164              		.global	OTG_HS_IRQHandler
 165              		.thumb
 166              		.thumb_func
 168              	OTG_HS_IRQHandler:
 169              	.LFB142:
 175:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 178:Src/stm32f4xx_it.c **** }
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c **** /**
 181:Src/stm32f4xx_it.c ****   * @brief This function handles USB On The Go HS global interrupt.
 182:Src/stm32f4xx_it.c ****   */
 183:Src/stm32f4xx_it.c **** void OTG_HS_IRQHandler(void)
 184:Src/stm32f4xx_it.c **** {
 170              		.loc 1 184 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\WINDOWS\TEMP\cccpvm6y.s 			page 7


 174 0000 08B5     		push	{r3, lr}
 175              	.LCFI1:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 3, -8
 178              		.cfi_offset 14, -4
 185:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_HS_IRQn 0 */
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c ****   /* USER CODE END OTG_HS_IRQn 0 */
 188:Src/stm32f4xx_it.c ****   HAL_HCD_IRQHandler(&hhcd_USB_OTG_HS);
 179              		.loc 1 188 0
 180 0002 0248     		ldr	r0, .L17
 181 0004 FFF7FEFF 		bl	HAL_HCD_IRQHandler
 182              	.LVL1:
 183 0008 08BD     		pop	{r3, pc}
 184              	.L18:
 185 000a 00BF     		.align	2
 186              	.L17:
 187 000c 00000000 		.word	hhcd_USB_OTG_HS
 188              		.cfi_endproc
 189              	.LFE142:
 191              		.section	.text.LTDC_IRQHandler,"ax",%progbits
 192              		.align	2
 193              		.global	LTDC_IRQHandler
 194              		.thumb
 195              		.thumb_func
 197              	LTDC_IRQHandler:
 198              	.LFB143:
 189:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_HS_IRQn 1 */
 190:Src/stm32f4xx_it.c **** 
 191:Src/stm32f4xx_it.c ****   /* USER CODE END OTG_HS_IRQn 1 */
 192:Src/stm32f4xx_it.c **** }
 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c **** /**
 195:Src/stm32f4xx_it.c ****   * @brief This function handles LTDC global interrupt.
 196:Src/stm32f4xx_it.c ****   */
 197:Src/stm32f4xx_it.c **** void LTDC_IRQHandler(void)
 198:Src/stm32f4xx_it.c **** {
 199              		.loc 1 198 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 199:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN LTDC_IRQn 0 */
 200:Src/stm32f4xx_it.c **** 
 201:Src/stm32f4xx_it.c ****   /* USER CODE END LTDC_IRQn 0 */
 202:Src/stm32f4xx_it.c ****   HAL_LTDC_IRQHandler(&hltdc);
 208              		.loc 1 202 0
 209 0002 0248     		ldr	r0, .L21
 210 0004 FFF7FEFF 		bl	HAL_LTDC_IRQHandler
 211              	.LVL2:
 212 0008 08BD     		pop	{r3, pc}
 213              	.L22:
 214 000a 00BF     		.align	2
ARM GAS  C:\WINDOWS\TEMP\cccpvm6y.s 			page 8


 215              	.L21:
 216 000c 00000000 		.word	hltdc
 217              		.cfi_endproc
 218              	.LFE143:
 220              		.section	.text.DMA2D_IRQHandler,"ax",%progbits
 221              		.align	2
 222              		.global	DMA2D_IRQHandler
 223              		.thumb
 224              		.thumb_func
 226              	DMA2D_IRQHandler:
 227              	.LFB144:
 203:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN LTDC_IRQn 1 */
 204:Src/stm32f4xx_it.c **** 
 205:Src/stm32f4xx_it.c ****   /* USER CODE END LTDC_IRQn 1 */
 206:Src/stm32f4xx_it.c **** }
 207:Src/stm32f4xx_it.c **** 
 208:Src/stm32f4xx_it.c **** /**
 209:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2D global interrupt.
 210:Src/stm32f4xx_it.c ****   */
 211:Src/stm32f4xx_it.c **** void DMA2D_IRQHandler(void)
 212:Src/stm32f4xx_it.c **** {
 228              		.loc 1 212 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI3:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 213:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2D_IRQn 0 */
 214:Src/stm32f4xx_it.c **** 
 215:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2D_IRQn 0 */
 216:Src/stm32f4xx_it.c ****   HAL_DMA2D_IRQHandler(&hdma2d);
 237              		.loc 1 216 0
 238 0002 0248     		ldr	r0, .L25
 239 0004 FFF7FEFF 		bl	HAL_DMA2D_IRQHandler
 240              	.LVL3:
 241 0008 08BD     		pop	{r3, pc}
 242              	.L26:
 243 000a 00BF     		.align	2
 244              	.L25:
 245 000c 00000000 		.word	hdma2d
 246              		.cfi_endproc
 247              	.LFE144:
 249              		.text
 250              	.Letext0:
 251              		.file 2 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_
 252              		.file 3 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 253              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 254              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 255              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 256              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma2d.h"
 257              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_ltdc.h"
 258              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 259              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 260              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_hcd.h"
ARM GAS  C:\WINDOWS\TEMP\cccpvm6y.s 			page 9


 261              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  C:\WINDOWS\TEMP\cccpvm6y.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\WINDOWS\TEMP\cccpvm6y.s:22     .text.NMI_Handler:00000000 $t
C:\WINDOWS\TEMP\cccpvm6y.s:27     .text.NMI_Handler:00000000 NMI_Handler
C:\WINDOWS\TEMP\cccpvm6y.s:40     .text.HardFault_Handler:00000000 $t
C:\WINDOWS\TEMP\cccpvm6y.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\WINDOWS\TEMP\cccpvm6y.s:59     .text.MemManage_Handler:00000000 $t
C:\WINDOWS\TEMP\cccpvm6y.s:64     .text.MemManage_Handler:00000000 MemManage_Handler
C:\WINDOWS\TEMP\cccpvm6y.s:78     .text.BusFault_Handler:00000000 $t
C:\WINDOWS\TEMP\cccpvm6y.s:83     .text.BusFault_Handler:00000000 BusFault_Handler
C:\WINDOWS\TEMP\cccpvm6y.s:97     .text.UsageFault_Handler:00000000 $t
C:\WINDOWS\TEMP\cccpvm6y.s:102    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\WINDOWS\TEMP\cccpvm6y.s:116    .text.DebugMon_Handler:00000000 $t
C:\WINDOWS\TEMP\cccpvm6y.s:121    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\WINDOWS\TEMP\cccpvm6y.s:133    .text.TIM6_DAC_IRQHandler:00000000 $t
C:\WINDOWS\TEMP\cccpvm6y.s:138    .text.TIM6_DAC_IRQHandler:00000000 TIM6_DAC_IRQHandler
C:\WINDOWS\TEMP\cccpvm6y.s:158    .text.TIM6_DAC_IRQHandler:0000000c $d
C:\WINDOWS\TEMP\cccpvm6y.s:163    .text.OTG_HS_IRQHandler:00000000 $t
C:\WINDOWS\TEMP\cccpvm6y.s:168    .text.OTG_HS_IRQHandler:00000000 OTG_HS_IRQHandler
C:\WINDOWS\TEMP\cccpvm6y.s:187    .text.OTG_HS_IRQHandler:0000000c $d
C:\WINDOWS\TEMP\cccpvm6y.s:192    .text.LTDC_IRQHandler:00000000 $t
C:\WINDOWS\TEMP\cccpvm6y.s:197    .text.LTDC_IRQHandler:00000000 LTDC_IRQHandler
C:\WINDOWS\TEMP\cccpvm6y.s:216    .text.LTDC_IRQHandler:0000000c $d
C:\WINDOWS\TEMP\cccpvm6y.s:221    .text.DMA2D_IRQHandler:00000000 $t
C:\WINDOWS\TEMP\cccpvm6y.s:226    .text.DMA2D_IRQHandler:00000000 DMA2D_IRQHandler
C:\WINDOWS\TEMP\cccpvm6y.s:245    .text.DMA2D_IRQHandler:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim6
HAL_HCD_IRQHandler
hhcd_USB_OTG_HS
HAL_LTDC_IRQHandler
hltdc
HAL_DMA2D_IRQHandler
hdma2d
